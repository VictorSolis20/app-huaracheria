/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.views;

import com.mycompany.huaracheriamx.DAOColorTexturaImpl;
import com.mycompany.huaracheriamx.DAOModeloTejidoImpl;
import com.mycompany.huaracheriamx.DAOTipoMaterialImpl;
import com.mycompany.huaracheriamx.DAOTipoSuelaImpl;
import com.mycompany.interfaces.DAOColorTextura;
import com.mycompany.interfaces.DAOModeloTejido;
import com.mycompany.interfaces.DAOTipoMaterial;
import com.mycompany.interfaces.DAOTipoSuela;
import com.mycompany.models.ColorTextura;
import com.mycompany.models.ModeloTejido;
import com.mycompany.models.TipoMaterial;
import com.mycompany.models.TipoSuela;
import com.mycompany.utils.Utils;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author Victor
 */
public class RegistroCaracteristicasHuarache extends javax.swing.JPanel {

    //Se crea una variable que recibe el valor que se selecciono en el 
    //comboBox de la ventana "MuestraCaracteristicasHuarache".
    private String valorComboBox;

    /**
     * Creates new form CaracteristicasHuarache
     */
    public RegistroCaracteristicasHuarache() {
        initComponents();
        InitStyles();
        LoadCaracteristicasHuarache();
    }

    public RegistroCaracteristicasHuarache(String valor) {
        initComponents();
        valorComboBox = valor;
        InitStyles();
        LoadCaracteristicasHuarache();
    }
    
    private void InitStyles(){
        //Se evalua el valor que se extrajo del comboBox para alicar los "placeholderText"
        if (valorComboBox.equals("Modelo de tejido")) {
            nombreTxt.putClientProperty("JTextField.placeholderText", "Ingrese el nombre del modelo de tejido.");
            observacionesTxt.putClientProperty("JTextField.placeholderText", "Ingrese las observaciones sobre modelo de tejido.");
            precioHuaracheTxt.putClientProperty("JTextField.placeholderText", "Ingrese el precio por par de huarache tejido.");
        } else if (valorComboBox.equals("Color o textura")) {
            nombreTxt.putClientProperty("JTextField.placeholderText", "Ingrese el nombre del color o textura.");
            observacionesTxt.putClientProperty("JTextField.placeholderText", "Ingrese las observaciones sobre el color o textura.");
        } else if (valorComboBox.equals("Tipo de suela")) {
            nombreTxt.putClientProperty("JTextField.placeholderText", "Ingrese el nombre del tipo de suela.");
            observacionesTxt.putClientProperty("JTextField.placeholderText", "Ingrese las observaciones sobre el tipo de suela.");
        } else if (valorComboBox.equals("Tipo de material (Correa y planta)")) {
            nombreTxt.putClientProperty("JTextField.placeholderText", "Ingrese el nombre del tipo de material de la correa y planta.");
            observacionesTxt.putClientProperty("JTextField.placeholderText", "Ingrese las observaciones sobre el tipo de material.");
        }
    }

    private void LoadCaracteristicasHuarache() {
        //Se le asigna el valor del comboBox a la etiqueta de la interfaz que muestra la opción seleccionada
        caracteristicaSeleccionadaLbl.setText(valorComboBox);
        //Se evalua el valor que se extrajo del comboBox
        if (valorComboBox.equals("Modelo de tejido")) {
            precioHuaracheLbl.setVisible(true);
            precioHuaracheTxt.setVisible(true);
        } else if (valorComboBox.equals("Color o textura")) {
            precioHuaracheLbl.setVisible(false);
            precioHuaracheTxt.setVisible(false);
        } else if (valorComboBox.equals("Tipo de suela")) {
            precioHuaracheLbl.setVisible(false);
            precioHuaracheTxt.setVisible(false);
        } else if (valorComboBox.equals("Tipo de material (Correa y planta)")) {
            precioHuaracheLbl.setVisible(false);
            precioHuaracheTxt.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title1 = new javax.swing.JLabel();
        image = new javax.swing.JLabel();
        title2 = new javax.swing.JLabel();
        nombreTxt = new javax.swing.JTextField();
        observacionesTxt = new javax.swing.JTextField();
        observacionesLbl = new javax.swing.JLabel();
        caracteristicaSeleccionadaLbl = new javax.swing.JLabel();
        btnRegistrar = new javax.swing.JButton();
        precioHuaracheLbl = new javax.swing.JLabel();
        precioHuaracheTxt = new javax.swing.JTextField();
        nombreLbl1 = new javax.swing.JLabel();
        image1 = new javax.swing.JLabel();
        jSeparator13 = new javax.swing.JSeparator();
        jSeparator14 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(255, 255, 255));

        title1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        title1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title1.setText("del Huarache");
        title1.setPreferredSize(new java.awt.Dimension(215, 32));

        image.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rch2.png"))); // NOI18N

        title2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        title2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title2.setText("Registro de características");
        title2.setPreferredSize(new java.awt.Dimension(215, 32));

        nombreTxt.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        nombreTxt.setPreferredSize(new java.awt.Dimension(6, 20));

        observacionesTxt.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        observacionesTxt.setPreferredSize(new java.awt.Dimension(6, 20));

        observacionesLbl.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        observacionesLbl.setText("Observaciones");

        caracteristicaSeleccionadaLbl.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        caracteristicaSeleccionadaLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        caracteristicaSeleccionadaLbl.setText("Característica seleccionada");

        btnRegistrar.setBackground(new java.awt.Color(18, 90, 173));
        btnRegistrar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrar.setText("Registrar");
        btnRegistrar.setBorderPainted(false);
        btnRegistrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        precioHuaracheLbl.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        precioHuaracheLbl.setText("Precio por par de huarahe tejido");

        precioHuaracheTxt.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        precioHuaracheTxt.setPreferredSize(new java.awt.Dimension(6, 20));

        nombreLbl1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        nombreLbl1.setText("Nombre");

        image1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        image1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rch.png"))); // NOI18N

        jSeparator13.setBackground(new java.awt.Color(240, 240, 240));
        jSeparator13.setForeground(new java.awt.Color(204, 204, 204));
        jSeparator13.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator13.setPreferredSize(new java.awt.Dimension(200, 10));

        jSeparator14.setBackground(new java.awt.Color(240, 240, 240));
        jSeparator14.setForeground(new java.awt.Color(204, 204, 204));
        jSeparator14.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator14.setPreferredSize(new java.awt.Dimension(200, 10));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(image1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(title2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(title1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGap(70, 70, 70)))
                        .addGap(30, 30, 30))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(caracteristicaSeleccionadaLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nombreTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(observacionesTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(nombreLbl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(183, 183, 183))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(observacionesLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(135, 135, 135))
                                            .addComponent(precioHuaracheLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(74, 74, 74))
                                    .addComponent(precioHuaracheTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(10, 10, 10)
                                .addComponent(jSeparator14, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(btnRegistrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(52, 52, 52)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(image1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(title2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(title1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(40, 40, 40)
                        .addComponent(caracteristicaSeleccionadaLbl)
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nombreLbl1)
                                        .addGap(8, 8, 8)
                                        .addComponent(nombreTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(observacionesLbl)
                                        .addGap(8, 8, 8)
                                        .addComponent(observacionesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(precioHuaracheLbl)
                                        .addGap(8, 8, 8)
                                        .addComponent(precioHuaracheTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jSeparator13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSeparator14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(52, 52, 52)))))
                .addGap(78, 78, 78))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed

        //Código mediante el cual se obtiene el formato de fecha
        Date fechaActual = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        String fechaActualString = formato.format(fechaActual);

        //Se evalua el valor del comboBox que se extrajo
        switch (valorComboBox) {
            case "Modelo de tejido":
                String nombre = nombreTxt.getText();
                String observaciones = observacionesTxt.getText();
                String precioParHuarache = precioHuaracheTxt.getText();

                //Validaciones para los campos
                // Se pone el nombre de la variable y con la función isEmpty() se evalua si esta vacia
                if (nombre.isEmpty() || precioParHuarache.isEmpty()) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Debe llenar todos los campos \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
                    // Posiciona el cursor en el campo nombre
                    nombreTxt.requestFocus();
                    return;
                } else if (!Utils.isNumeric(precioParHuarache)) {
                    javax.swing.JOptionPane.showMessageDialog(this, "El campo precio por par de huarache tejido debe contener números enteros. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
                    precioHuaracheTxt.requestFocus();
                    return;
                }

                ModeloTejido modTejido = new ModeloTejido();
                modTejido.setNombre(nombre);
                modTejido.setObservaciones(observaciones);
                modTejido.setFechaRegistro(fechaActualString);
                modTejido.setPrecioParHuarache(Float.parseFloat(precioHuaracheTxt.getText()));

                try {
                    DAOModeloTejido dao = new DAOModeloTejidoImpl();
                    dao.registrar(modTejido);
                    javax.swing.JOptionPane.showMessageDialog(this, "Registro realizado exitosamente. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    
                    //Ya que se realizó el registro en la base de datos, limpia las cajas de texto.
                    nombreTxt.setText("");
                    observacionesTxt.setText("");
                    precioHuaracheTxt.setText("");
                } catch (Exception e) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Ocurrio un error al realizar el registro. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
                    System.out.println(e.getMessage());
                }

                break;
            case "Color o textura":
                String nombre2 = nombreTxt.getText();
                String observaciones2 = observacionesTxt.getText();

                //Validaciones para los campos
                // Se pone el nombre de la variable y con la función isEmpty() se evalua si esta vacia
                if (nombre2.isEmpty()) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Debe llenar todos los campos \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
                    // Posiciona el cursor en el campo nombre
                    nombreTxt.requestFocus();
                    return;
                }
                
                ColorTextura colorText = new ColorTextura();
                colorText.setNombre(nombre2);
                colorText.setObservaciones(observaciones2);
                colorText.setFechaRegistro(fechaActualString);
                try {
                    DAOColorTextura dao = new DAOColorTexturaImpl();
                    dao.registrar(colorText);
                    javax.swing.JOptionPane.showMessageDialog(this, "Color o textura registrada exitosamente. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    
                    //Ya que se realizó el registro en la base de datos, limpia las cajas de texto.
                    nombreTxt.setText("");
                    observacionesTxt.setText("");
                } catch (Exception e) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Ocurrio un error al registrar el color o textura del huarache. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
                    System.out.println(e.getMessage());
                }
                
                break;
            case "Tipo de suela":
                String nombre3 = nombreTxt.getText();
                String observaciones3 = observacionesTxt.getText();

                //Validaciones para los campos
                // Se pone el nombre de la variable y con la función isEmpty() se evalua si esta vacia
                if (nombre3.isEmpty()) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Debe llenar todos los campos \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
                    // Posiciona el cursor en el campo nombre
                    nombreTxt.requestFocus();
                    return;
                }
                
                TipoSuela typeSuela = new TipoSuela();
                typeSuela.setNombre(nombre3);
                typeSuela.setObservaciones(observaciones3);
                typeSuela.setFechaRegistro(fechaActualString);
                try {
                    DAOTipoSuela dao = new DAOTipoSuelaImpl();
                    dao.registrar(typeSuela);
                    javax.swing.JOptionPane.showMessageDialog(this, "Tipo de suela registrada exitosamente. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    
                    //Ya que se realizó el registro en la base de datos, limpia las cajas de texto.
                    nombreTxt.setText("");
                    observacionesTxt.setText("");
                } catch (Exception e) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Ocurrio un error al registrar el tipo de suela del huarache. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
                    System.out.println(e.getMessage());
                }
                
                break;
            case "Tipo de material (Correa y planta)":
                String nombre4 = nombreTxt.getText();
                String observaciones4 = observacionesTxt.getText();

                //Validaciones para los campos
                // Se pone el nombre de la variable y con la función isEmpty() se evalua si esta vacia
                if (nombre4.isEmpty()) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Debe llenar todos los campos \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
                    // Posiciona el cursor en el campo nombre
                    nombreTxt.requestFocus();
                    return;
                }
                
                TipoMaterial typeMaterial = new TipoMaterial();
                typeMaterial.setNombre(nombre4);
                typeMaterial.setObservaciones(observaciones4);
                typeMaterial.setFechaRegistro(fechaActualString);
                try {
                    DAOTipoMaterial dao = new DAOTipoMaterialImpl();
                    dao.registrar(typeMaterial);
                    javax.swing.JOptionPane.showMessageDialog(this, "El tipo de material de la correa y planta se han registrado exitosamente. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    
                    //Ya que se realizó el registro en la base de datos, limpia las cajas de texto.
                    nombreTxt.setText("");
                    observacionesTxt.setText("");
                } catch (Exception e) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Ocurrio un error al registrar el tipo de material de la correa y planta del huarache. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
                    System.out.println(e.getMessage());
                }
                
                break;
            default:
                javax.swing.JOptionPane.showMessageDialog(this, "No se ha seleccionado ninguna opción. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JLabel caracteristicaSeleccionadaLbl;
    private javax.swing.JLabel image;
    private javax.swing.JLabel image1;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JLabel nombreLbl1;
    private javax.swing.JTextField nombreTxt;
    private javax.swing.JLabel observacionesLbl;
    private javax.swing.JTextField observacionesTxt;
    private javax.swing.JLabel precioHuaracheLbl;
    private javax.swing.JTextField precioHuaracheTxt;
    private javax.swing.JLabel title1;
    private javax.swing.JLabel title2;
    // End of variables declaration//GEN-END:variables
}
